#version 400 core

out vec4 color;

uniform vec3 cd = vec3(0.5, 0.2, 0.7);
uniform vec3 cs = vec3(1.0);
uniform float exponent = 512.0;

uniform sampler2D texture_cd;

in VS_OUT
{
	vec3 vs_normal;
	vec3 vs_light;
	vec3 vs_eye;
	
	vec3 ms_coord;
	vec2 uv;
} fs_in;


uniform float er = 5.0;
uniform vec3 cr = vec3(0.1, 0.7, 0.2);

vec3 calculateRim(vec3 N, vec3 V)
{
	float f = 1.0 - dot(N, V);
	f = smoothstep(0.0, 1.0, f);
	f = pow(f, er);
	return f * cr;
}

void main()
{
	vec3 reflection = reflect(-(fs_in.vs_light), fs_in.vs_normal);
	
	vec3 diffuseColor = max(dot(fs_in.vs_normal, fs_in.vs_light), 0.0) * cd;
	vec3 specularColor = pow(max(dot(reflection, fs_in.vs_eye), 0.0), exponent) * cs;

	color = vec4(diffuseColor + specularColor + calculateRim(fs_in.vs_normal, fs_in.vs_eye), 1.0);
	//color = vec4(1.0);
	//color = vec4(fs_in.ms_coord, 1.0);
	
	//color = texture(texture_cd, fs_in.uv);
	//color = vec4(calculateRim(fs_in.vs_normal, fs_in.vs_eye), 1.0);
}

