#version 400 core

layout (location = 0) in vec4 vertex;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec3 tangent;
layout (location = 3) in vec2 uv;

layout (location = 10) uniform mat4 MV;
layout (location = 11) uniform mat4 V;
layout (location = 12) uniform mat4 P;

uniform vec3 ws_light = vec3(35.0, 15.0, 25.0);

out VS_OUT
{
	vec3 vs_normal;
	vec3 vs_light;
	vec3 vs_eye;
	
	vec3 ms_coord;
} vs_out;

void main()
{
	vec4 vs_position = MV * vertex;
	vec3 vs_light = mat3(MV) * ws_light;
	
	vs_out.vs_normal = normalize( mat3(MV) * normal );
	vs_out.vs_light = normalize( vs_light - vs_position.xyz );
	vs_out.vs_eye = normalize( -vs_position.xyz );
	
	vs_out.ms_coord = vertex;

	gl_Position = P * vs_position;
}